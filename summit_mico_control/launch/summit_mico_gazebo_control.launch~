<?xml version="1.0"?>
<launch>
  
  <!-- Choose Controller Type -->
  <arg name="use_trajectory_controller" default="false"/>
  <arg name="joint_velocity_controller" default="true"/>
  <arg name="joint_effort_controller" default="false"/>
  <arg name="joint_position_controller" default="false"/>
  
  
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- MICO2 2Finger Arm Controllers -->
  <rosparam file="$(find summit_mico_control)/config/mico_gazebo_control.yaml" command="load"/>
  <!-- Summit XL HL Base Controllers -->
  <rosparam file="$(find summit_mico_control)/config/summit_gazebo_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="summit_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="
                          --timeout 120
                          summit_xl_control
                          joint_read_state_controller
                          ">
  </node>

  <group if="$(arg use_trajectory_controller)">
    <!-- Effort Joint trajectory controller-->
    <node name="mico_trajectory_controller" pkg="controller_manager" type="spawner" 
      output="screen"  
      args="
      --timeout 120
      effort_joint_trajectory_controller
      effort_finger_trajectory_controller"/>
      
    <!-- Move Kinova to Home Position -->
    <node name="command_mico_home_pose" pkg="summit_mico_control" type="mico_trajectory_home.py"
        respawn="false" output="screen">       
    </node>
  
  </group>


  <group if="$(arg joint_position_controller)">
  <!-- load the joint by joint position controllers -->  
    <node name="mico_position_controller" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" 
       args="
             --timeout 120
             joint_1_position_controller joint_2_position_controller  
             joint_3_position_controller joint_4_position_controller
             joint_5_position_controller joint_6_position_controller 
             finger_2_position_controller finger_1_position_controller 
             "/> 
    <!-- Move Kinova to Home Position -->
    <node name="command_mico_home_pose" pkg="summit_mico_control" type="mico_position_home.py"
        respawn="false" output="screen">
     </node>       
  </group>
  
  
  <group if="$(arg joint_velocity_controller)">
  <!-- load the joint by joint position controllers -->  
    <node name="mico_velocity_controller" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" 
       args="
             --timeout 120
             joint_1_velocity_controller joint_2_velocity_controller  
             joint_3_velocity_controller joint_4_velocity_controller
             joint_5_velocity_controller joint_6_velocity_controller
             finger_2_velocity_controller finger_1_velocity_controller 
             "/> 
  </group>
  
  
  <group if="$(arg joint_effort_controller)">
  <!-- load the joint by joint position controllers -->  
    <node name="mico_effort_controller" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" 
       args="
             --timeout 120
             joint_1_effort_controller joint_2_effort_controller  
             joint_3_effort_controller joint_4_effort_controller
             joint_5_effort_controller joint_6_effort_controller 
             "/> 
  </group>


  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
  </node>

</launch>

 
