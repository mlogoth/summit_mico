<?xml version="1.0"?>
<launch>

    <arg name="interface" default="velocity"/>
    <arg name="enable_ft_sensor" default="true"/>

    <arg name="robot_id" default=""/>

    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <arg name="robot_pose" value="-x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>


    <group if="$(eval arg('robot_id') =='')">
        <arg name="prefix" value=""/>
        <!-- Load the URDF into the ROS Parameter Server -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find summit_mico_description)/robots/summit_mico_csl.urdf.xacro'" />

        <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model summit_mico -param robot_description $(arg robot_pose) -J mico_joint_1 0.0
    -J mico_joint_2 2.9
    -J mico_joint_3 1.3
    -J mico_joint_4 -2.07
    -J mico_joint_5 1.4
    -J mico_joint_6 0.0"/>


        <!-- Broadcast The initial Position -->
        <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_odom" args="$(arg x) $(arg y) $(arg z) $(arg roll) $(arg pitch) $(arg yaw) world odom 1000" /> -->

        <!-- <group ns="mico"> -->
            <!-- Mico Base Controllers -->
            <rosparam file="$(find summit_mico_control)/config/mico_gazebo_control.yaml" command="load" subst_value="true"/>

            <!-- load the controllers -->
            <!-- <node name="mico_joint_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
      joint_state_controller"/> -->

            <group if="$(eval arg('interface') =='effort')">
                <!-- load the controllers -->
                <node name="mico_velocity_trajectory_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
      velocity_finger_trajectory_controller
      effort_joint_trajectory_controller
      joint_state_controller"/>
            </group>

            <group if="$(eval arg('interface') =='velocity')">
                <!-- load the controllers -->
                <node name="mico_trajectory_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
      velocity_finger_trajectory_controller
      velocity_joint_trajectory_controller
      joint_state_controller"/>
            </group>


        <!-- </group> -->


        <!-- Robot state publisher -->
        <node pkg="robot_state_publisher" type="state_publisher" name="mico_state_publisher">
            <param name="publish_frequency" type="double" value="100.0"/>
        </node>
    </group>

</launch>

